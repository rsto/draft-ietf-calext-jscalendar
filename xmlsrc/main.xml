<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc [
<!ENTITY nbsp "&#160;">
<!ENTITY zwsp "&#8203;">
<!ENTITY nbhy "&#8209;">
<!ENTITY wj "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt"?>
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="4"?>
<?rfc compact="yes"?>
<?rfc subcompact="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc iprnotified="no"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" category="exp" consensus="true" docName="draft-ietf-calext-jscalendar-icalendar-08" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" symRefs="true" sortRefs="true" version="3">
  <front>
    <title abbrev="JSCalendar">JSCalendar: Converting from and to iCalendar</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-calext-jscalendar-icalendar-08"/>
    <author initials="R." surname="Stepanek" fullname="Robert Stepanek">
      <organization>Fastmail</organization>
      <address>
        <postal>
          <street>PO Box 234</street>
          <street>Collins St West</street>
          <city>Melbourne</city>
          <code>VIC 8007</code>
          <country>Australia</country>
          <region/>
        </postal>
        <email>rsto@fastmailteam.com</email>
        <uri>https://www.fastmail.com</uri>
      </address>
    </author>
    <date year="2024" month="January" day="17"/>
    <area>Applications</area>
    <workgroup>Calendaring extensions</workgroup>
    <keyword>JSON</keyword>
    <keyword>iCalendar</keyword>
    <keyword>JSCalendar</keyword>
    <keyword>calendar</keyword>
    <keyword>events</keyword>
    <keyword>date</keyword>
    <keyword>time</keyword>
    <abstract>
      <t>TBD</t>
    </abstract>
  </front>
  <middle>
    <section>
      <name>Introduction</name>
      <section anchor="notational-conventions" numbered="true" toc="default">
        <name>Notational Conventions</name>
        <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>", "<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as described in BCPÂ 14 <xref target="RFC2119" format="default" sectionFormat="of" derivedContent="RFC2119"/>
          <xref target="RFC8174" format="default" sectionFormat="of" derivedContent="RFC8174"/> when, and only when, they appear in all capitals, as shown here.</t>
        <t>The ABNF definitions in this document use the notations of <xref target="RFC5234"/>. ABNF rules not defined in this document either are defined in <xref target="RFC5234"/> or <xref target="RFC5545"/>.</t>
      </section>
      <section>
        <name>Example Notations</name>
        <t>This document contains examples that illustrate how to convert between the iCalendar and JSCalendar data formats.  The notation of these examples is such that their main points should be clear to the reader, but their contents can also be parsed for automated testing.  The authors of this document implemented a tool that extracts these examples for interoperation testing.  The following sections define the notation for such examples.</t>
        <section anchor="notation-icalendar">
          <name>iCalendar Examples</name>
          <t>An iCalendar example contains either an extract or a complete representation of iCalendar data.  It always represents an iCalendar object, even if the example only depicts non-VCALENDAR components or properties.</t>
          <t>An example that only contains iCalendar properties implicitly represents a VEVENT component that is part of a VCALENDAR component.  An example that only contains one or more non-VCALENDAR components implicitly represents a VCALENDAR component that contains them.  Implicit components are assumed to contain mandatory properties with some value, but the actual value is irrevelant for the main point of the example.</t>
          <t>To illustrate this, <xref target="example-notation-icalendar-implicit-explicit"/>, <xref target="example-notation-icalendar-dotdotdot"/> contains three examples, all of which represent the same iCalendar data.  In the first example, both the VEVENT component and VCALENDAR component are implicit, including their mandatory properties.  In the second example, only the VCALENDAR component and its mandatory properties are implicit.  The third example depicts a complete VCALENDAR component, nothing is implicit.</t>
          <figure anchor="example-notation-icalendar-implicit-explicit">
            <name>Examples for implicit and explicit iCalendar component notation</name>
            <sourcecode><![CDATA[
SUMMARY:hello
]]></sourcecode>
            <sourcecode><![CDATA[
BEGIN:VEVENT
DTSTAMP:20060102T030405Z
DTSTART:20060102T030405Z
SUMMARY:hello
UID:CC0A494A-6E07-4827-8294-0752DD1ECFA4
END:VEVENT
]]></sourcecode>
            <sourcecode><![CDATA[
BEGIN:VCALENDAR
PRODID:-//FOO//bar//EN
VERSION:2.0
BEGIN:VEVENT
DTSTAMP:20060102T030405Z
DTSTART:20060102T030405Z
SUMMARY:hello
UID:CC0A494A-6E07-4827-8294-0752DD1ECFA4
END:VEVENT
END:VCALENDAR
]]></sourcecode>
          </figure>
          <t>A line containing just the value <tt>...</tt> stands for any other properties that might be present in a component but are irrevelant for this example.  This includes mandatory properties.  <xref target="example-notation-icalendar-dotdotdot"/> illustrates this as an alternative representation for the examples of <xref target="example-notation-icalendar-implicit-explicit"/>.</t>
          <figure anchor="example-notation-icalendar-dotdotdot">
            <name>Example for additional properties represented by <tt>...</tt>
            </name>
            <sourcecode><![CDATA[
BEGIN:VEVENT
SUMMARY:hello
...
END:VEVENT
]]></sourcecode>
          </figure>
          <t>A line starting with two spaces represents the continuation of a folded content line (<xref target="RFC5545" section="3.1"/>).  <xref target="example-notation-icalendar-folded"/> illustrates this.</t>
          <figure anchor="example-notation-icalendar-folded">
            <name>Example for a folded content line</name>
            <sourcecode><![CDATA[
SUMMARY:he
  llo
]]></sourcecode>
          </figure>
        </section>
        <section anchor="notation-jscalendar">
          <name>JSCalendar Examples</name>
          <t>A JSCalendar example always represents a Group object, even if the example only depicts one of the Group entries or properties.</t>
          <t>JSCalendar objects are depicted either explicitly or implicitly. An explicit JSCalendar object starts and ends with braces.  An implicit JSCalendar object omits braces, it only consists of JSON name/value pairs, separated by comma.</t>
          <t>An implicit JSCalendar object is assumed to be of type Event, unless it contains the <tt>@type</tt> property with a different value.  It is assumed to contain mandatory properties with some value, but the actual value is irrevelant for the main point of the example.</t>
          <t>
            <xref target="example-notation-jscalendar-implicit-explicit"/> illustrates this with multiple examples, all of which represent the same JSCalendar data.  The first example contains an implicit JSCalendar object of type Event.  The second example contains an implicit JSCalendar object with a <tt>@type</tt> property.  The third example contains an explicit Event object but the Group object containing it is omitted.  The fourth example contains the full Group object, nothing is omitted.</t>
          <figure anchor="example-notation-jscalendar-implicit-explicit">
            <name>Examples for implicit and explicit JSCalendar object notation</name>
            <sourcecode type="json"><![CDATA[
"title": "hello"
]]></sourcecode>
            <sourcecode type="json"><![CDATA[
"@type": "Event",
"title": "hello"
]]></sourcecode>
            <sourcecode type="json"><![CDATA[
{
  "@type": "Event",
  "title": "hello",
  "start": "2006-01-02T03:04:05",
  "timeZone": "Etc/UTC",
  "uid": "CC0A494A-6E07-4827-8294-0752DD1ECFA4",
  "updated": "2006-01-02T03:04:05Z"
}
]]></sourcecode>
            <sourcecode type="json"><![CDATA[
{
  "@type": "Group",
  "entries": [
    {
      "@type": "Event",
      "title": "hello",
      "start": "2006-01-02T03:04:05",
      "timeZone": "Etc/UTC",
      "uid": "CC0A494A-6E07-4827-8294-0752DD1ECFA4",
      "updated": "2006-01-02T03:04:05Z"
    }
  ]
}
]]></sourcecode>
          </figure>
          <t>A property with name <tt>"..."</tt> and value <tt>""</tt> stands for additional properties that might be present in a JSCalendar object, but which are irrelevant for this example.  This includes mandatory properties. <xref target="example-notation-jscalendar-dotdotdot"/> illustrates this as an alternative representation for the examples of <xref target="example-notation-jscalendar-implicit-explicit"/>.</t>
          <figure anchor="example-notation-jscalendar-dotdotdot">
            <name>Example for additional properties represented by <tt>...</tt>
            </name>
            <sourcecode type="json"><![CDATA[
{
  "@type": "Event",
  "title": "hello",
  "...": ""
}
]]></sourcecode>
          </figure>
        </section>
      </section>
    </section>
    <section anchor="convert-icalendar-to-jscalendar">
      <name>Converting iCalendar to JSCalendar</name>
      <section anchor="ical-objects">
        <name>iCalendar Objects</name>
        <t>An iCalendar object (<xref target="RFC5545" section="3.4"/>) converts to a JSCalendar object of type Group (<xref target="RFC8984" section="2.3"/>).</t>
        <t>Converting an iCalendar stream of multiple iCalendar objects is <xref target="RFC5545" section="3.4"/> is implementation-specific, as multiple protocols and applications may have differing requirements.</t>
      </section>
      <section anchor="generating-jscalendar-ids">
        <name>JSCalendar Ids</name>
        <t>In many places in JSCalendar, a JSON map is used where the map keys are of type Id (<xref target="RFC8984" section="1.4.1"/>.  If an iCalendar property or component converts to a value in these JSON maps, then an implementation needs to choose an identifier as key.</t>
        <t>This document defines the new <xref target="ical-param-jsid">JSID</xref> parameter and <xref target="ical-prop-jsid">JSID</xref> property, which allow to set a JSCalendar Id value when converting from JSCalendar to iCalendar.  If they are set on a property or the component, then its value <bcp14>MUST</bcp14> be used a map key when converting from iCalendar to JSCalendar.  If no such parameter or property is set, then an implementation is free to choose any identifier as map key, as long the following requirements are met:</t>
        <ul>
          <li>The identifier <bcp14>MUST</bcp14> be a valid Id value.</li>
          <li>If the same iCalendar object is converted twice, then the identifier for each property or component <bcp14>MUST</bcp14> stay the same, irrespective of the order in which properties and subcomponents are processed.</li>
        </ul>
        <t>In a few cases, an iCalendar property and component may both convert to the same JSCalendar object.  Examples for this are the ATTENDEE property and PARTICIPANT component, as well as the LOCATION property and VLOCATION component ...TBD</t>
      </section>
      <section anchor="ical-components">
        <name>Components</name>

        {% for comp_name, comp in icalendar.components | dictsort %}
        <section anchor="ical-comp-{{ comp_name|lower }}">
          <name>{{ comp_name|upper }}</name>
          {% if comp.convert %}
          <t>The <xref target="{{comp.rfc}}" section="{{comp.section}}" sectionFormat="parens">{{comp_name|upper}} component</xref> converts to a {{comp.convert.object}} object. Its entries convert as follows:</t>
            <table>
              <thead>
                <tr>
                  <th>Kind</th>
                  <th>Name</th>
                  <th>{{ comp.convert.object }} property</th>
                  <th>Note</th>
                </tr>
              </thead>
              <tbody>
                {% if comp.properties %}
                  {% for prop_name, prop in comp.properties | dictsort %}
                  <tr>
                    <td>Property</td>
                    <td>{{ prop_name }}</td>
                    {% if prop.convert %}
                    <td>{{ prop.convert.property }}</td>
                    <td>{{ prop.convert.note }}</td>
                    {% else %}
                    <td>iCalProps</td>
                    <td>Non-standard {{ comp.convert.object }} property.</td>
                    {% endif %}
                  </tr>
                  {% endfor %}
                {% endif %}
                {% if comp.components %}
                  {% for subcomp_name, subcomp in comp.components | dictsort %}
                  <tr>
                    <td>Component</td>
                    <td>{{ subcomp_name }}</td>
                    {% if subcomp.convert %}
                    <td>{{ subcomp.convert.property }}</td>
                    <td>{{ subcomp.convert.note }}</td>
                    {% else %}
                    <td>iCalComps</td>
                    <td>Non-standard {{ comp.convert.object }} property.</td>
                    {% endif %}
                  </tr>
                  {% endfor %}
                {% endif %}
              </tbody>
            </table>

            {% for example in comp.convert.examples %}
            <section>
              <name>Example: {% if example.name %}{{ example.name }}{% else %} Converting the {{ comp_name }} component{% endif %}</name>
                {{ example.desc }}
                <figure anchor="test-ical-comp-{{ comp_name|lower }}-{{ loop.index }}">
                  <name>{% if example.name %}{{ example.name }}{% else %} Converting the {{ comp_name }} component{% endif %}</name>
                  <sourcecode><![CDATA[{{ example.icalendar }}]]>
    </sourcecode>
                  <sourcecode type="json"><![CDATA[{{ example.jscalendar|tojson(indent=2) }}]]>
    </sourcecode>
                </figure>
              </section>
              {% endfor %}

          {% else %}
          <t>The <xref target="{{comp.rfc}}" section="{{comp.section}}" sectionFormat="parens">{{comp_name|upper}} component</xref> does not convert to a standard JSCalendar element.</t>
          {% endif %}
        </section>
        {% endfor %}

      </section>
    </section>
    <section anchor="convert-jscalendar-to-icalendar">
      <name>Converting JSCalendar to iCalendar</name>
    </section>
    <section anchor="updates-icalendar">
      <name>Updates to iCalendar</name>
      <section anchor="new-icalendar-parameters">
        <name>New iCalendar parameters</name>
        <section anchor="ical-param-jsid">
          <name>JSID</name>
          <t/>
        </section>
      </section>
      <section anchor="new-icalendar-properties">
        <name>New iCalendar properties</name>
        <section anchor="ical-prop-jsid">
          <name>JSID</name>
          <t/>
        </section>
        <section anchor="ical-prop-show-without-time">
          <name>SHOW-WITHOUT-TIME</name>
          <t/>
        </section>
      </section>
    </section>
    <section anchor="updates-jscalendar">
      <name>Updates to JSCalendar</name>
      <section anchor="new-jscalendar-properties">
        <name>New JSCalendar properties</name>
        <section anchor="jscal-prop-icalcomps">
          <name>Property <tt>iCalComps</tt>
          </name>
          <dl>
            <dt>Type: <tt>JCalComp[]</tt> (optional).</dt>
            <dd>This contains iCalendar components that are set in the iCalendar component represented by this JSCalendar object.  The JCalComp type denotes a jCal-encoded iCalendar component as defined in <xref target="RFC7265" sectionFormat="of" section="3.3"/>.</dd>
          </dl>
        </section>
        <section anchor="jscal-prop-icalprops">
          <name>Property <tt>iCalProps</tt>
          </name>
          <dl>
            <dt>Type: <tt>JCalProp[]</tt> (optional).</dt>
            <dd>This contains iCalendar properties that are set in the iCalendar component represented by this JSCalendar object.  The JCalProp type denotes a jCal-encoded iCalendar property as defined in <xref target="RFC7265" sectionFormat="of" section="3.4"/>.</dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="IANA">
      <!-- All drafts are required to have an IANA considerations section.  See RFC 8126 for a guide.-->
      <name>IANA Considerations</name>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2397.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2445.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.3986.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5545.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6321.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6638.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7265.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7529.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7808.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7953.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7986.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8259.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8607.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8984.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9073.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9074.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.9253.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <!--[I-D.calconnect-vobject-i18n] IESG state Expired. Entered the long way to get the correct initials-->
        <reference anchor="I-D.ietf-jmap-calendars" target="https://datatracker.ietf.org/doc/draft-ietf-jmap-calendars/">
          <front>
            <title>JMAP for Calendars</title>
            <author fullname="Neil Jenkins" initials="N.M." surname="Jenkins">
              <organization>Fastmail</organization>
            </author>
            <author fullname="Michael Douglass" initials="M." surname="Douglass">
              <organization>Spherical Cow Group</organization>
            </author>
            <date day="22" month="July" year="2024"/>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-jmap-calendars"/>
        </reference>
      </references>
    </references>
  </back>
</rfc>
